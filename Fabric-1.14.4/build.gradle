plugins {
    id 'fabric-loom' version '0.7.9'
}

// Setup = genSources

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
}

minecraft {
	accessWidener 'src/main/resources/lotas.accesswidener'
}

dependencies {
    minecraft "com.mojang:minecraft:1.14.4"
    mappings "net.fabricmc:yarn:1.14.4+build.18:v2"
    modImplementation "net.fabricmc:fabric-loader:0.11.1"
    implementation files ('libs/rLog.jar')
    implementation files ('libs/identifier_obfc.jar')
	implementation files ('libs/ffmpeg.jar')
    modImplementation  "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}


task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
}

// :)

project.getAllTasks(true).each { key, val -> 
	val.each {
		it.group = null
	}	
}

tasks.getByName("downloadAssets").group = "fabric"
tasks.getByName("runClient").group = "fabric"
tasks.getByName("runServer").group = "fabric"
tasks.getByName("javadoc").group = "fabric"
tasks.getByName("eclipse").group = "fabric"
tasks.getByName("migrateMappings").group = "fabric"
tasks.getByName("remapJar").group = "fabric"


